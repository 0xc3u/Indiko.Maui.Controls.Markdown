name: Create a (Pre)release on NuGet

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"           # Match tags like 1.0.29
      - "v[0-9]+.[0-9]+.[0-9]+"           # Match tags like v1.0.29
      - "[0-9]+.[0-9]+.[0-9]+-preview[0-9]+"  # Match pre-release tags like 1.0.29-preview1
      - "v[0-9]+.[0-9]+.[0-9]+-preview[0-9]+" # Match pre-release tags like v1.0.29-preview1
  workflow_dispatch:    # Allows manual run

jobs:

  release:
    runs-on: windows-latest

    strategy:
      matrix:
        project:
          - name: "Indiko.Maui.Controls.Markdown"
            path: "src/Indiko.Maui.Controls.Markdown/Indiko.Maui.Controls.Markdown.csproj"
          
    steps:
      - uses: actions/checkout@v3

      - name: Fetch all tags
        run: |
          git fetch --tags
        shell: bash

      - name: Get latest tag (Manual trigger)
        if: github.event_name == 'workflow_dispatch'
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          latest_tag_without_v=${latest_tag#v}
          echo "latest_tag=$latest_tag_without_v" >> $GITHUB_ENV
        shell: bash

      - name: Use the pushed tag (Push trigger)
        if: github.event_name == 'push'
        id: get_version_from_push
        uses: battila7/get-version-action@v2

      - name: Pack project
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            dotnet pack ${{ matrix.project.path }} -c Release -p:PackageVersion=${{ env.latest_tag }}
          else
            version_without_v=${{ steps.get_version_from_push.outputs.version-without-v }}
            dotnet pack ${{ matrix.project.path }} -c Release -p:PackageVersion=$version_without_v
          fi
        shell: bash

      - name: Push to NuGet
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            dotnet nuget push $(dirname ${{ matrix.project.path }})/bin/Release/${{ matrix.project.name }}.${{ env.latest_tag }}.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}
          else
            dotnet nuget push $(dirname ${{ matrix.project.path }})/bin/Release/${{ matrix.project.name }}.${{ steps.get_version_from_push.outputs.version-without-v }}.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}
          fi
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.NUGET_API_KEY }}